@model ehr_csharp.Models.Paciente

@using (Html.BeginForm("Salvar", "Paciente", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    var errors = ViewData.ModelState.Where(n => n.Value.Errors.Count > 0).ToList();
    @Html.HiddenFor(x => x.Id)

    <main class="container-fluid px-3 py-5 p-lg-6 p -xxl-8">
        <header class="border-bottom mb-10">
            <div class="row">
                <div class="col-sm-6 col-12">
                    <h1 class="ls-tight">Pacientes</h1>
                </div>
            </div>
            <br />
            <label class="form-label"><b>Atenção:</b> Todas as informações fornecidas são confidenciais e serão utilizadas exclusivamente para fins de atendimento médico.</label>
            <label class="form-label">Certifique-se de que todos os dados estão corretos e atualizados.</label>
            <ul class="nav nav-tabs nav-tabs-flush gap-6 overflow-x border-0 mt-4">
            </ul>
        </header>
        @if (errors.Count > 0)
        {
            <div class="col-xl-12" style="margin-top:40px;">
                <div class="alert alert-danger">
                    @Html.ValidationSummary(false, "Erros encontrados:")
                </div>
            </div>
        }
        <div class="row align-items-center">
            <div class="col-md-6">
                <label class="form-label" for="Email">* Nome Completo:</label>
                @Html.TextBoxFor(x => x.NomeCompleto, new { @class = "form-control", name = "NomeCompleto", id = "NomeCompleto" })
            </div>
            <div class="col-md-4">
                <label class="form-label" for="DataNascimento">* Data de Nascimento:</label>
                @Html.TextBoxFor(x => x.DataNascimento, new { @class = "form-control DataNascimento", name = "DataNascimento", id = "DataNascimento" })
            </div>
            <div class="col-md-2">
                <label class="form-label" for="Sexo">* Sexo:</label>
                @Html.DropDownListFor(model => model.Sexo, new List<SelectListItem>
            {
            new SelectListItem { Text = "Selecionar", Value = "" },
            new SelectListItem { Text = "Feminino", Value = "F" },
            new SelectListItem { Text = "Masculino", Value = "M" }
            }, new { @class = "form-select", @id = "Sexo" })
            </div>
        </div>
        <hr class="my-6">

        <div class="row align-items-center">
            <div class="col-md-3">
                <label class="form-label" for="Cpf">* CPF:</label>
                @Html.TextBoxFor(x => x.Cpf, new { @class = "form-control cpf", name = "Cpf", id = "Cpf" })
            </div>
            <div class="col-md-3">
                <label class="form-label" for="Rg">* RG:</label>
                @Html.TextBoxFor(x => x.Rg, new { @class = "form-control Rg", name = "Rg", id = "Rg" })
            </div>
            <div class="col-md-3">
                <label class="form-label" for="Profissao">* Profissão:</label>
                @Html.TextBoxFor(x => x.Profissao, new { @class = "form-control", name = "Rg", id = "Rg" })
            </div>
            <div class="col-md-3">
                <label class="form-label" for="EstadoCivil">* Estado Civil:</label>
                @Html.DropDownListFor(model => model.EstadoCivil, new List<SelectListItem>
            {
            new SelectListItem { Text = "Selecionar", Value = "" },
            new SelectListItem { Text = "Casado(a)", Value = "1" },
            new SelectListItem { Text = "Solteiro(a)", Value = "2" },
            new SelectListItem { Text = "Divorciado(a)", Value = "3" },
            new SelectListItem { Text = "Viúvo(a)", Value = "4" },
            new SelectListItem { Text = "União Estável", Value = "5" },
            }, new { @class = "form-select", @id = "EstadoCivil" })
            </div>
        </div>
        <hr class="my-6">

        <div class="row align-items-center">
            <div class="col-md-6">
                <label class="form-label" for="Email">E-mail:</label>
                @Html.TextBoxFor(x => x.Email, new { @class = "form-control", name = "Rg", id = "Rg" })
            </div>
            <div class="col-md-3">
                <label class="form-label" for="Celular">Celular:</label>
                @Html.TextBoxFor(x => x.Celular, new { @class = "form-control celular", name = "Celular", id = "Celular" })
            </div>
            <div class="col-md-3">
                <label class="form-label" for="TelefoneFixo">Telefone Fixo:</label>
                @Html.TextBoxFor(x => x.TelefoneFixo, new { @class = "form-control TelefoneFixo", name = "TelefoneFixo", id = "TelefoneFixo" })
            </div>
        </div>

        <hr class="my-6">
        <div class="row align-items-center">
            <div class="col-md-3">
                <label class="form-label" for="Cep">* CEP:</label>
                @Html.TextBoxFor(x => x.Cep, new { @class = "form-control cep", name = "Cep", id = "Cep" })
            </div>
            <div class="col-md-9">
                <label class="form-label" for="Endereco">* Endereço (Rua, Número, Bairro, Cidade, Estado):</label>
                @Html.TextBoxFor(x => x.Endereco, new { @class = "form-control", name = "Endereco", id = "Endereco" })
            </div>
        </div>
        <hr class="my-6">

        <label class="form-label" for="Cep">ANTECEDENTES:</label>
        <div class="row align-items-center">
            <div class="col-md-6 row" style="align-self: normal;">
                <div class="col-md-10">
                    <label class="form-label" for="AntecedenteDesc">Descrição:</label>
                    <input class="form-control" id="AntecedenteInput" />
                </div>
                <div class="col-md-2" style="padding-top: 2rem;">
                    <button type="button" onclick="AdicionarAntecedente()" class="btn btn-sm btn-primary">+</button>
                </div>
            </div>

            <div id="divContainer" style="padding-top: 1.3rem;" class="row align-items-center col-md-5">
                @foreach (var item in Model.Antecedentes)
                {
                    <div class="col-md-10" id="idAntecedenteContainer@(Model.Antecedentes.IndexOf(item))">
                        <label class="form-label" for="AntecedenteDesc">

                        </label>
                        <input readonly="" name="Antecedentes@(Model.Antecedentes.IndexOf(item))" class="form-control" value="@item.Descricao">
                    </div>

                    <div class="col-md-2" style="padding-top: 0.5rem;" id="idAntecedenteBtn@(Model.Antecedentes.IndexOf(item))">
                        <button type="button" onclick="RemoverAntecedente(@Model.Antecedentes.IndexOf(item))" class="btn btn-sm btn-primary">-</button>
                    </div>
                }
            </div>
        </div>
        @Html.HiddenFor(m => m.Antecedentes)

        <hr class="my-6">

        <div class="hstack gap-2 ms-auto align-items-end">
            <div class="d-flex align-items-end justify-content-between">
                <div class="d-none d-md-flex gap-2"><a href="/paciente/index" class="btn btn-sm btn-neutral">Cancelar</a> <button type="submit" class="btn btn-sm btn-primary">Salvar</button></div>
            </div>
        </div>
    </main>
}



<script>
    
    let contador = 0;
    function AdicionarAntecedente() {
        var inputValue = $('#AntecedenteInput').val();

        if (inputValue.trim() === "") {
            alert("Por favor, insira um valor.");
            return;
        }

        // Cria uma nova div para exibir o antecedente adicionado
        var novaDiv = $('<div class="col-md-10" id="idAntecedenteContainer' + contador + '"> <label class= "form-label" for="AntecedenteDesc"> </label> <input readonly name="Antecedentes' + contador + '" class="form-control" value="' + inputValue + '" /> </div><div class="col-md-2" style="padding-top: 0.5rem;" id="idAntecedenteBtn' + contador + '"> <button type="button" onclick="RemoverAntecedente(' + contador + ')" class="btn btn-sm btn-primary">-</button> </div>');

        // Adiciona um campo oculto para o antecedente
        $('<input>').attr({
            type: 'hidden',
            name: 'Antecedentes[' + contador + '].Descricao', // Nome do campo deve ser uma coleção
            value: inputValue
        }).appendTo('#divContainer');

        $('#divContainer').append(novaDiv);
        contador++;
        $('#AntecedenteInput').val('');
    }

    function RemoverAntecedente(id) {
        $("#idAntecedenteContainer" + id).remove();
        $("#idAntecedenteBtn" + id).remove();
        $("input[name='Antecedentes[" + id + "].Descricao']").remove(); // Remove o campo oculto correspondente
    }
</script>